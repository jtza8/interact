; Use of this source code is governed by a BSD-style
; license that can be found in the license.txt file
; in the root directory of this project.

(in-package :click)

(internal chop-sdl-key)
(defun chop-sdl-key (keyword &optional (prefix "SDL-KEY"))
  (let ((name (nstring-upcase (symbol-name keyword))))
    (if (string= (subseq name 0 (length prefix)) prefix)
        (intern (subseq name (1+ (length prefix))) 'keyword)
        keyword)))

(internal parse-sdl-event)
(defun parse-sdl-event (sdl-event)
  (flet ((display-state-event ()
           `(:display-state 
             :gain ,(sdl::active-gain sdl-event)
             :state ,(sdl::active-state sdl-event)))
         (key-event (event-name)
           `(,event-name
             :state ,(sdl::key-state sdl-event)
             :scancode ,(sdl::key-scancode sdl-event)
             :key ,(chop-sdl-key (sdl::key-key sdl-event))
             :mod ,(sdl::key-mod sdl-event)
             :mod-key ,(mapcar (lambda (keyword)
                                 (chop-sdl-key keyword "SDL-KEY-MOD"))
                               (sdl::key-mod-key sdl-event))
             :unicode ,(sdl::key-unicode sdl-event)))
         (mouse-motion-event ()
           `(:mouse-motion
             :state ,(sdl::mouse-motion-button sdl-event)
             :x ,(sdl::mouse-motion-x sdl-event)
             :y ,(sdl::mouse-motion-y sdl-event)
             :x-rel ,(sdl::mouse-motion-x-rel sdl-event)
             :y-rel ,(sdl::mouse-motion-y-rel sdl-event)))
         (mouse-button-event (event-name)
           `(,event-name
             :button ,(sdl::mouse-button-button sdl-event)
             :state ,(sdl::mouse-button-state sdl-event)
             :x ,(sdl::mouse-button-x sdl-event)
             :y ,(sdl::mouse-button-y sdl-event)))
         (joy-axis-motion-event ()
           `(:joy-axis-motion
             :which ,(sdl::joy-axis-motion-which sdl-event)
             :axis ,(sdl::joy-axis-motion-axis sdl-event)
             :value ,(sdl::joy-axis-motion-value sdl-event)))
         (joy-hat-motion-event ()
           `(:joy-hat-motion
             :which ,(sdl::joy-hat-motion-which sdl-event)
             :axis ,(sdl::joy-hat-motion-axis sdl-event)
             :value ,(sdl::joy-hat-motion-value sdl-event)))
         (joy-ball-motion-event ()
           `(:joy-ball-motion
             :which ,(sdl::joy-ball-motion-which sdl-event)
             :ball ,(sdl::joy-ball-motion-ball sdl-event)
             :x-rel ,(sdl::joy-ball-motion-x-rel sdl-event)
             :y-rel ,(sdl::joy-ball-motion-y-rel sdl-event)))
         (joy-button-event (event-name)
           `(,event-name
             :which ,(sdl::joy-button-which sdl-event)
             :button ,(sdl::joy-button-button sdl-event)
             :state ,(sdl::joy-button-state sdl-event)))
         (user-event ()
           `(:user-event
             :type ,(sdl::user-type sdl-event)
             :code ,(sdl::user-code sdl-event)
             :data1 ,(sdl::user-data1 sdl-event)
             :data2 ,(sdl::user-data2 sdl-event)))
         (display-resize-event ()
           `(:display-resize
             :w ,(sdl::video-resize-w sdl-event)
             :h ,(sdl::video-resize-h sdl-event))))
    
    (ecase (sdl::get-event-type sdl-event)
      (:no-event '(:no-event))
      (:active-event (display-state-event))
      (:key-down-event (key-event :key-down))
      (:key-up-event (key-event :key-up))
      (:mouse-motion-event (mouse-motion-event))
      (:mouse-button-down-event (mouse-button-event :mouse-button-down))
      (:mouse-button-up-event (mouse-button-event :mouse-button-up))
      (:joy-axis-motion-event (joy-axis-motion-event))
      (:joy-hat-motion-event (joy-hat-motion-event))
      (:joy-ball-motion-event (joy-ball-motion-event))
      (:joy-button-down-event (joy-button-event :joy-button-down))
      (:joy-button-up-event (joy-button-event :joy-button-up))
      (:quit-event '(:quit))
      (:sys-wm-event '(:sys-wm-event))
      (:video-resize-event (display-resize-event))
      (:video-expose-event '(:display-exposure))
      (:user-event (user-event)))))